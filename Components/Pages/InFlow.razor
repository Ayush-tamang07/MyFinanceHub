@page "/inflow"
@using MyFinanceHub.Model
@inject SessionUser Session
@inject UserService UserService

<div>
    <div class="texts">
        <div class="text-row">
            <p>Name</p>
            <input @bind="name" />
        </div>

        <!-- Tag Selection with Custom Tag Option -->
        <div class="text-row">
            <p>Tag</p>
            <select @bind="Tag" @bind:event="onchange">
                <option value="">-- Select Tag --</option>
                <option value="Debt">Debt</option>
                <option value="Rent">Rent</option>
                <option value="Food">Food</option>
                <option value="Drinks">Drinks</option>
                <option value="Clothes">Clothes</option>
                <option value="Gadgets">Gadgets</option>
                <option value="Miscellaneous">Miscellaneous</option>
                <option value="Fuel">Fuel</option>
                <option value="EMI">EMI</option>
                <option value="Party">Party</option>
                <option value="CustomTag">Custom Tag</option>
            </select>
        </div>

        <!-- Custom Tag Input -->
        @if (isCustomTag)
        {
            <div class="text-row">
                <p>Custom Tag</p>
                <input @bind="customTag" placeholder="Enter custom tag" />
            </div>
        }

        <div class="text-row">
            <p>Amount</p>
            <input @bind="amount" type="number" />
        </div>
        <div class="text-row">
            <p>Description</p>
            <input @bind="description" />
        </div>
        <button @onclick="SubmitCashIn">Submit</button>
    </div>

    <div>
        @if (!string.IsNullOrEmpty(message))
        {
            <p class="@((isSuccess ? "success-message" : "error-message"))" style="color:red;">@message</p>
        }
    </div>

    <table border="1">
        <thead>
            <tr>
                <th>Name</th>
                <th>ID</th>
                <th>Type</th>
                <th>Tag</th>
                <th>Date</th>
                <th>Amount</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cashin in Session.UserLogin.Transaction.Where(t => t.TransactionType == "Credit"))
            {
                <tr class="@GetRowClass(cashin)">
                    <td>@cashin.TransactionName</td>
                    <td>@cashin.TransactionId</td>
                    <td>@cashin.TransactionType</td>
                    <td>@cashin.TransactionLabel</td>
                    <td>@cashin.TransactionDate.ToShortDateString()</td>
                    <td>@cashin.TransactionAmount</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<style>
    .highlight-row {
        background-color: #f2dede; /* Light red background */
        color: #a94442; /* Dark red text */
    }
</style>

@code {
    private string name = "";
    private string tag = "";
    private string customTag = "";
    private decimal amount = 0;
    private string description = "";
    private string message = "";
    private bool isCustomTag = false;
    private bool isSuccess = false;

    private string Tag
    {
        get => tag;
        set
        {
            tag = value;
            isCustomTag = tag == "CustomTag";
        }
    }

    private void SubmitCashIn()
    {
        if (string.IsNullOrWhiteSpace(name) || string.IsNullOrWhiteSpace(tag) || (isCustomTag && string.IsNullOrWhiteSpace(customTag)) || amount <= 0 || string.IsNullOrWhiteSpace(description))
        {
            message = "All fields are required, and amount must be greater than zero.";
            isSuccess = false;
            return;
        }

        var user = Session.UserLogin;

        // Use custom tag if "CustomTag" is selected, otherwise use the dropdown value
        var selectedTag = isCustomTag ? customTag : tag;

        var newCashIn = new CashIn
            {
                CashInId = user.CashIn.Count + 1,
                CashInName = name,
                CashInType = "Credit",
                Label = selectedTag,
                Amount = amount,
                CashInDate = DateTime.Now,
                CashInDescription = description
            };

        var newTrans = new Transaction
            {
                TransactionId = user.Transaction.Count + 1,
                TransactionLabel = selectedTag,
                TransactionName = name,
                TransactionAmount = amount,
                TransactionDescription = description,
                TransactionType = "Credit",
                TransactionDate = DateTime.Now
            };

        // Add the new objects to the lists
        user.Transaction.Add(newTrans);
        user.CashIn.Add(newCashIn);

        // Save the updated user data
        var users = UserService.LoadUsers();
        var userIndex = users.FindIndex(u => u.UserID == user.UserID);
        if (userIndex != -1)
        {
            users[userIndex] = user;
            UserService.SaveUsers(users);
        }

        // Clear the input fields
        name = "";
        tag = "";
        customTag = "";
        amount = 0;
        description = "";
        isCustomTag = false;

        message = "Transaction successful!";
        isSuccess = true;
    }

    private string GetRowClass(Transaction cashin)
    {
        return cashin.TransactionLabel == "Debt" ? "highlight-row" : string.Empty;
    }
}
